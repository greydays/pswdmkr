angular.module('starter.services', [])

.factory('Store', function() {
  var store = {};
  return {
    set: function (key, value){
      store[key] = value;
      return store;
    },
    get: function (key){
      return store[key];
    }
  }
})

.factory('algorithms', function() {

  var primesList = {
    prime12: [
      198491329, 198491369, 198491383, 198491407, 198491417, 198491431, 198491437, 198491441, 198491443, 198491467, 198491471, 198491477, 198491497, 198491509, 198491533, 198491551, 198491561, 198491567, 198491581, 198491597, 198491611, 198491617, 198491639, 198491641, 198491653, 198491693, 198491737, 198491759, 198491807, 198491809, 198491831, 198491833, 198491869, 198491873, 198491897, 198491899, 198491903, 198491941, 198492011, 198492043, 198492059, 198492061, 198492089, 198492097, 198492113, 198492121, 198492127, 198492137, 198492157, 198492181, 198492191, 198492197, 198492209, 198492223, 198492241, 198492251,198492263, 198492271, 198492299, 198492311, 198492337, 198492347, 198492377, 198492389
    ],
    prime13: [
      217645199, 217645201, 217645213, 217645229, 217645289, 217645303, 217645321, 217645349, 217645357, 217645397, 217645427, 217645453, 217645469, 217645517, 217645523, 217645529, 217645559, 217645583, 217645639, 217645643, 217645663, 217645691, 217645693, 217645697, 217645717, 217645723, 217645733, 217645739, 217645751, 217645759, 217645763, 217645789,217645801, 217645807, 217645819, 217645871, 217645891, 217645903, 217645933, 217645943, 217645963, 217645973, 217645979, 217645991, 217645997, 217646041, 217646057, 217646063, 217646111, 217646167, 217646179, 217646183, 217646201, 217646203, 217646227, 217646243, 217646267, 217646269, 217646281, 217646329, 217646371, 217646383, 217646389, 217646399
    ],
    prime14: [
      236887699, 236887733, 236887751, 236887757,236887769, 236887789, 236887811, 236887823, 236887837, 236887841, 236887853, 236887897, 236887901, 236887919, 236887961, 236887967, 236887999, 236888033, 236888039, 236888053, 236888083, 236888087, 236888089, 236888117, 236888123, 236888129, 236888137, 236888159, 236888167, 236888173, 236888177, 236888189, 236888191, 236888203, 236888213, 236888221, 236888231, 236888237, 236888297, 236888303, 236888317, 236888321, 236888423, 236888441, 236888459, 236888503, 236888513, 236888527, 236888539, 236888543, 236888549, 236888573, 236888579, 236888581, 236888609, 236888621, 236888623, 236888627, 236888629, 236888651, 236888653, 236888657, 236888683, 236888699
    ],
    prime15: [
      256203221, 256203223, 256203229, 256203257, 256203293, 256203307, 256203317, 256203329, 256203349, 256203359, 256203373, 256203397, 256203403, 256203419, 256203457, 256203469, 256203491, 256203523, 256203559, 256203611, 256203631, 256203641, 256203659, 256203679, 256203691, 256203707, 256203709, 256203743, 256203757, 256203763, 256203767, 256203811, 256203823, 256203851, 256203863, 256203881, 256203911, 256203929, 256203931, 256203971, 256203979, 256203989, 256204001, 256204027, 256204049, 256204073, 256204079, 256204099, 256204129, 256204147, 256204163, 256204171, 256204187, 256204217, 256204253, 256204259, 256204283, 256204301, 256204309, 256204313, 256204387, 256204397, 256204409, 256204411
    ],
    prime16: [
      275604547, 275604577, 275604599, 275604617, 275604643, 275604677, 275604691, 275604727, 275604733, 275604767, 275604793, 275604803, 275604817, 275604821, 275604841, 275604869, 275604881, 275604913, 275604947, 275604961, 275604983, 275605007, 275605019, 275605027, 275605061, 275605087, 275605093, 275605117, 275605123, 275605129, 275605171, 275605177, 275605199, 275605219, 275605223, 275605273, 275605289, 275605307, 275605313, 275605331, 275605339, 275605349, 275605373, 275605391, 275605399, 275605409, 275605423, 275605427, 275605439, 275605511, 275605543, 275605549, 275605553, 275605591, 275605607, 275605613, 275605633, 275605657, 275605661, 275605663, 275605679, 275605691, 275605709, 275605721
    ],
    prime17: [
      295075153, 295075163, 295075213, 295075241, 295075283, 295075289, 295075309, 295075337, 295075357, 295075367, 295075373, 295075379, 295075381, 295075399, 295075421, 295075423, 295075457, 295075463, 295075471, 295075489, 295075499, 295075513, 295075523, 295075531, 295075537, 295075553, 295075591, 295075597, 295075603, 295075679, 295075687, 295075699, 295075721, 295075723, 295075769, 295075799, 295075801, 295075829, 295075861, 295075903, 295075927, 295075939, 295075967, 295075969, 295076009, 295076063, 295076083, 295076087, 295076143, 295076149, 295076153, 295076179, 295076183, 295076203, 295076209, 295076227, 295076233, 295076237, 295076317, 295076333, 295076351, 295076381, 295076401, 295076413
    ],
    prime18: [
      314606891, 314606909, 314606917, 314606953, 314606969, 314606977, 314607001, 314607019, 314607023, 314607031, 314607043, 314607047, 314607053, 314607077, 314607089, 314607091, 314607103, 314607113, 314607173, 314607191, 314607193, 314607199, 314607229, 314607233, 314607239, 314607281, 314607323, 314607329, 314607343, 314607347, 314607427, 314607487, 314607509, 314607511, 314607539, 314607571, 314607581, 314607583, 314607607, 314607611, 314607617, 314607649, 314607653, 314607659, 314607673, 314607721, 314607749, 314607773, 314607817, 314607851, 314607857, 314607859, 314607893, 314607971, 314607977, 314607991, 314608009, 314608087, 314608139, 314608163, 314608183, 314608199, 314608207, 314608219
    ],
    prime19: [
      334214467, 334214521, 334214557, 334214561, 334214581, 334214591, 334214593, 334214663, 334214681, 334214687, 334214723, 334214753, 334214779, 334214833, 334214857, 334214861, 334214869, 334214891, 334214893, 334214899, 334214911, 334214939, 334214941, 334214953, 334214957, 334214977, 334214981, 334214983, 334214987, 334214989, 334215029, 334215041, 334215059, 334215083, 334215107, 334215113, 334215131, 334215137, 334215151, 334215179, 334215209, 334215239, 334215253, 334215289, 334215293, 334215317, 334215331, 334215347, 334215361, 334215383, 334215421, 334215437, 334215439, 334215443, 334215451, 334215457, 334215521, 334215527, 334215587, 334215593, 334215611, 334215617, 334215647, 334215659
    ],
    prime20:  [
      353868019, 353868023, 353868043, 353868169, 353868181, 353868187, 353868223, 353868233, 353868247, 353868287, 353868289, 353868299, 353868313, 353868329, 353868337, 353868377, 353868401, 353868421, 353868443, 353868451, 353868467, 353868479, 353868523, 353868533, 353868601, 353868649, 353868661, 353868679, 353868709, 353868721, 353868727, 353868743, 353868761, 353868763, 353868773, 353868799, 353868803, 353868811, 353868829, 353868833, 353868839, 353868857, 353868871, 353868877, 353868881, 353868883, 353868959, 353868997, 353869001, 353869003, 353869013, 353869027, 353869031, 353869037, 353869039, 353869057, 353869067, 353869097, 353869133, 353869141, 353869151, 353869177, 353869193, 353869261
    ]
  };

  var characters = '`1234567890-=qwertyuiopasdfghjkl;zxcvbnm,!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?';

  return {

    extend: function(str, newLen) {
      if(str === '') return str;
      if(!newLen) newLen = 16;
      var newString = '';
      for(i = 0; i < newLen; i++) {
        newString += str[i % str.length];
      }
      return newString;
    },

    mixup: function(str, prim) {
      var newString = '';
      var i = str.length;
        while (i > 0) {
          if (i == 1) newString += str;
          var mod = (primesList[prim][i]) % i;
          newString += str.slice(mod - 1, mod);
          str = str.slice(0, mod - 1) + str.slice(mod, i);
          i--;
      };
      return newString;
    },

    changer: function(str, prim) {
      var newstring = ""
      for (var i = 0; i < str.length; i++) {
        newstring += characters[(primesList[prim][i] * primesList[prim][i] * characters.indexOf(str[i])) % characters.length] ;
        var charIdx = characters.indexOf(str[i]);
        if (charIdx !== -1) {
          newstring += characters[(primesList[prim][i] * primesList[prim][i + 1] * charIdx) % characters.length] ;
        }
      }
      return newstring;
    }

  };
})

.factory('Chats', function() {
  // Might use a resource here that returns a JSON array

  // Some fake testing data
  var chats = [{
    id: 0,
    name: 'Ben Sparrow',
    lastText: 'You on your way?',
    face: 'img/ben.png'
  }, {
    id: 1,
    name: 'Max Lynx',
    lastText: 'Hey, it\'s me',
    face: 'img/max.png'
  }, {
    id: 2,
    name: 'Adam Bradleyson',
    lastText: 'I should buy a boat',
    face: 'img/adam.jpg'
  }, {
    id: 3,
    name: 'Perry Governor',
    lastText: 'Look at my mukluks!',
    face: 'img/perry.png'
  }, {
    id: 4,
    name: 'Mike Harrington',
    lastText: 'This is wicked good ice cream.',
    face: 'img/mike.png'
  }];

  return {
    all: function() {
      return chats;
    },
    remove: function(chat) {
      chats.splice(chats.indexOf(chat), 1);
    },
    get: function(chatId) {
      for (var i = 0; i < chats.length; i++) {
        if (chats[i].id === parseInt(chatId)) {
          return chats[i];
        }
      }
      return null;
    }
  };
});
